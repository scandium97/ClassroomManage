package dao;

import db.DbUtil;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;

import java.util.ArrayList;

import bean.Booking;


public class BookingDAO {
	static public ArrayList<Booking> getWaitingQueue() {
		ArrayList<Booking> list = new ArrayList<Booking>();
		Connection conn = DbUtil.GetConnection();
		String sql = "SELECT user_id, cr_id, week_no,day_no,time_no,reason FROM waitingqueue";
		try {
			Statement smt = conn.createStatement();
			ResultSet rs = smt.executeQuery(sql);
			while(rs.next()) {
				Booking tmp = new Booking(rs.getString("user_id"),rs.getString("cr_id"),
						rs.getInt("week_no"),rs.getInt("day_no"),
						rs.getInt("time_no"),rs.getString("reason") );
				list.add(tmp);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return list;
	}
	static public boolean IsBookingLeagal(Booking b) {
		Connection conn = DbUtil.GetConnection();
		String checksql = "SELECT user_id FROM schedule WHERE"
				+ " cr_id=? AND week_no=? AND day_no=?"
				+ " AND time_no=?";
		String r = null;
		try {
			PreparedStatement psmt = conn.prepareStatement(checksql);
			psmt.setString(1, b.GetCrId());
			psmt.setInt(2, b.GetWeekNo());
			psmt.setInt(3, b.GetDayNo());
			psmt.setInt(4, b.GetTimeNo());
			ResultSet rs = psmt.executeQuery();
			while(rs.next()) {
				r = rs.getString("user_id");
				return false;
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return true;
	}
	static public boolean Permit(Booking b) {
		Connection conn = DbUtil.GetConnection();
		String sql = "INSERT INTO schedule(user_id,cr_id,week_no,"
				+ "day_no,time_no,booking_type) VALUES(?,?,?,?,?,?)";
		PreparedStatement psmt;
		try {
			psmt = conn.prepareStatement(sql);
			psmt.setString(1, b.GetUserId());
			psmt.setString(2, b.GetCrId());
			psmt.setInt(3, b.GetWeekNo());
			psmt.setInt(4, b.GetDayNo());
			psmt.setInt(5, b.GetTimeNo());
			psmt.setString(6,b.GetReason());
			psmt.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}
		return true;
	}
	static public void RefuseBook(Booking b) {
		Connection conn = DbUtil.GetConnection();
		String sql = "DELETE FROM waitingqueue WHERE"
				+ " user_id=? AND cr_id=? AND week_no=? AND day_no=?"
				+ " AND time_no=?";
		
	}
	static public void ClearIlleagal(Booking b) {
		Connection conn = DbUtil.GetConnection();
		String sql = "DELETE FROM waitingqueue WHERE"
				+ " cr_id=? AND week_no=? AND day_no=?"
				+ " AND time_no=?";
		PreparedStatement psmt;
		try {
			psmt = conn.prepareStatement(sql);
			psmt.setString(1, b.GetCrId());
			psmt.setInt(2, b.GetWeekNo());
			psmt.setInt(3, b.GetDayNo());
			psmt.setInt(4, b.GetTimeNo());
			psmt.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	static public boolean Permitting(Booking b) {
		Connection conn = DbUtil.GetConnection();
		String sql1 = "INSERT INTO schedule(user_id,cr_id,week_no,"
				+ "day_no,time_no,booking_type) VALUES(?,?,?,?,?,'ΩË”√')";
		String sql2 = "DELETE FROM waitingqueue WHERE"
				+ " cr_id=? AND week_no=? AND day_no=?"
				+ " AND time_no=?";
		
		try {
			conn.setAutoCommit(false);
			PreparedStatement psmt = conn.prepareStatement(sql1);
			psmt.setString(1, b.GetUserId());
			psmt.setString(2, b.GetCrId());
			psmt.setInt(3, b.GetWeekNo());
			psmt.setInt(4, b.GetDayNo());
			psmt.setInt(5, b.GetTimeNo());
			psmt.executeUpdate();
			psmt = conn.prepareStatement(sql2);
			psmt.setString(1, b.GetCrId());
			psmt.setInt(2, b.GetWeekNo());
			psmt.setInt(3, b.GetDayNo());
			psmt.setInt(4, b.GetTimeNo());
			psmt.executeUpdate();
			return true;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			try {
				conn.rollback();
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			return false;
		}
		
	}
}
